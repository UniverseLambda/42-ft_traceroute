// Extract from the

// -w max[,here,near], --wait=max[,here,near]
// 	Determines how long to wait for a response to a probe.

// 	There are three (in general) float values separated by a comma (or a slash).  Max specifies the maximum time (in seconds, default 5.0) to wait, in any case.

// 	Traditional  traceroute  implementation always waited whole max seconds for any probe. But if we already have some replies from the same hop, or even from some next hop, we can use the round trip time of such a reply
// 	as a hint to determine the actual reasonable amount of time to wait.

// 	The optional here (default 3.0) specifies a factor to multiply the round trip time of an already received response from the same hop. The resulting value is used as a timeout for the probe, instead of  (but  no  more
// 	than) max.
// 	The optional near (default 10.0) specifies a similar factor for a response from some next hop.  (The time of the first found result is used in both cases).

// 	First, we look for the same hop (of the probe which will be printed first from now).  If nothing found, then look for some next hop. If nothing found, use max.  If here and/or near have zero values, the corresponding
// 	computation is skipped.
// 	Here and near are always set to zero if only max is specified (for compatibility with previous versions).


// Defaults:

fn algo() {
	let max: f64 = 5.0;
	let here: f64 = 3.0;
	let near: f64 = 10.0;

	let hop_count = 3usize;

	let first_current_hop: Option<f64> = None;

	for i in 0..hop_count {

	}
}
